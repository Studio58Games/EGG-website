NDSummary.OnToolTipsLoaded("CSharpClass:Engine.src.logic.behavior.SolidBody",{4697:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype4697\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">Engine.&#8203;src.&#8203;logic.&#8203;behavior.</span>&#8203;SolidBody</div></div></div><div class=\"TTSummary\">Behavior of an object that blocks ans is blocked by other solids.&nbsp; It has a friction coefficient and a bounciness.</div></div>",4699:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype4699\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">protected const double</span> DefaultFrictionCoefficient</div></div></div>",4700:"<div class=\"NDToolTip TConstant LCSharp\"><div id=\"NDPrototype4700\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">protected const double</span> DefaultBounciness</div></div></div>",4702:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4702\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public float</span> Friction</div></div></div>",4703:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype4703\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public float</span> Bounciness</div></div></div>",4705:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4705\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> SolidBody()</div></div><div class=\"TTSummary\">Instanciates a default SolidBody behaviour.</div></div>",4706:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4706\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> SolidBody(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">frictionCoefficient,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">bounciness</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Instanciates a SolidBody behaviour</div></div>",4707:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4707\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public override void</span> Enter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">GameObject&nbsp;</td><td class=\"PName last\">gameObject1,</td></tr><tr><td class=\"PType first\">Collider&nbsp;</td><td class=\"PName last\">coll1,</td></tr><tr><td class=\"PType first\">GameObject&nbsp;</td><td class=\"PName last\">gameObject2,</td></tr><tr><td class=\"PType first\">Collider&nbsp;</td><td class=\"PName last\">coll2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Called when gameObject1\'s collider coll1 enters gameObject2\'s collider coll2.</div></div>",4645:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4645\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public float</span> GetCircleCircleDepth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle1,</td></tr><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle2,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\">Side&nbsp;</td><td class=\"PName last\">collisionSide</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Determines the depth of a circle1 inside circle2</div></div>",4646:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4646\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public float</span> GetCirclePolygonDepth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle,</td></tr><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\">Side&nbsp;</td><td class=\"PName last\">collisionSide,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isInside</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Determines the depth of a circle inside polygon</div></div>",4647:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4647\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public float</span> GetPolygonCircleDepth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon,</td></tr><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\">Side&nbsp;</td><td class=\"PName last\">collisionSide,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isInside</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Determines the depth of a polygon inside circle</div></div>",4648:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4648\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public float</span> GetPolygonPolygonDepth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon1,</td></tr><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon2,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\">Side&nbsp;</td><td class=\"PName last\">collisionSide</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Determines the depth of polygon1 inside polygon2</div></div>",4629:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4629\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Side GetCircleCircleCollisionSide(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle1,</td></tr><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle2,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isInside</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Calculates the collision side of circle1 and circle2</div></div>",4630:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4630\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Side GetCirclePolygonCollisionSide(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle,</td></tr><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isInside</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Calculates the collision side of circle and polygon</div></div>",4631:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4631\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Side GetPolygonCircleCollisionSide(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon,</td></tr><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isInside</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Calculates the collision side of polygon and circle</div></div>",4632:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4632\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Side GetPolygonPolygonCollisionSide(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon1,</td></tr><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon2,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isInside</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Calculates the collision side of polygon1 and polygon2</div></div>",4633:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4633\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Side ChooseCollisionSide(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Circle&nbsp;</td><td class=\"PName last\">circle,</td></tr><tr><td class=\"PType first\">List&lt;Side&gt;&nbsp;</td><td class=\"PName last\">sides,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Returns the side with a normal vector the closest as the inverted speed, and with the greatest contact length possible with circle</div></div>",4634:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype4634\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">public</span> Side ChooseCollisionSide(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Polygon&nbsp;</td><td class=\"PName last\">polygon,</td></tr><tr><td class=\"PType first\">List&lt;Side&gt;&nbsp;</td><td class=\"PName last\">sides,</td></tr><tr><td class=\"PType first\">Vector2&nbsp;</td><td class=\"PName last\">speed</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Returns the side with a normal vector the closest as the inverted speed, and with the greatest contact length possible with polygon</div></div>"});